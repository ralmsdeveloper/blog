<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-24T17:18:41+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ralms.NET</title><subtitle>EntityFrameworkCore ASPNET Core PostgreSQL Kafka Google PubSub REGEX Performance Span&lt;T&gt; Dicas Software Tecnologia Sistemas Distribuidos Mensageria SQL Server Break Change Developers Sergipe System&gt;Text.JSON Apply Configuration Deep-Dive EFCore Dicas Performance IEnumeralble List Array</subtitle><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><entry><title type="html">Adeus 2019, bem vindo 2020!</title><link href="http://localhost:4000/retrospectiva/feliz2020/" rel="alternate" type="text/html" title="Adeus 2019, bem vindo 2020!" /><published>2019-12-31T00:00:00+00:00</published><updated>2019-12-31T00:00:00+00:00</updated><id>http://localhost:4000/retrospectiva/feliz2020</id><content type="html" xml:base="http://localhost:4000/retrospectiva/feliz2020/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/feliz2020.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala meu amigo(a), tudo bem?!&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;h1 id=&quot;agradecimentos&quot;&gt;Agradecimentos&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Nossa, que ano foi esse &lt;b&gt;2019&lt;/b&gt;, muitas conquistas e realiza√ß√µes, e antes de come√ßar a escrever minha retrospectiva 
 quero deixar aqui meu muito obrigado, a voc√™ que diretamente ou indiretamente me ajudou a passar este maravilhoso ano, com seus feedbacks, apoio e carinho.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;fam√≠lia&quot;&gt;Fam√≠lia&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/familia.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Quero agrade√ßer a minha esposa e minhas filhas por toda paci√™ncia que tiveram comigo, pedir desculpa 
pelo tempo que tive ausente, pois saiba que, voc√™s s√£o minha base, minha estrutura, eu amo voc√™s, quantas noites e quanto tempo ausente, mas voc√™s sempre me apoiando em todas minhas decis√µes e desafios.&lt;br /&gt;
üíõ üíô üíú ‚ù§Ô∏è üíö
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;desafio&quot;&gt;Desafio&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/stonepagamentos.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Eu estava em uma fase de minha vida onde realmente procurava algo desafiador, ent√£o recebi um convite para fazer uma entrevista em Janeiro para uma poss√≠vel vaga 
nesta empresa espetacular, com uma cultura linda e empolgante, ent√£o no m√™s seguinte j√° iniciei as atividades, onde a cada dia que passa mais apaixonado fico, o desafio n√£o tem sido f√°cil, por√©m √© prazeroso.&lt;br /&gt;
Tem me proporcionado um crescimento profissional, onde me sinto realizado!
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;mentor&quot;&gt;Mentor&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/alexandre.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Tive/tenho a oportunidade de trabalhar com esse cara fenomenal &lt;b&gt;Alexandre Brand√£o&lt;/b&gt;, tem sido um divisor de aguas em minha carreira profissional, tem me dado feedbacks extramamente evolutivos, sendo assim queria deixar aqui registrado meu muito obrigado por tudo.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;bootcamp&quot;&gt;Bootcamp&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/azurebootcamp.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Realizamos um bootcamp na Universidade Mauricio de Nassau, onde tive o prazer de conhecer uma galera muito legal, dentre eles o &lt;b&gt;David Counto&lt;/b&gt; e a &lt;b&gt;Izabela Rezende&lt;/b&gt;, 2 seres vivos que Deus colocou em minha vida e hoje considero como familia, amo voc√™s 2 de cora√ß√£o!
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;google&quot;&gt;Google&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/google.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Em mar√ßo tamb√©m tive a oportunidade conhecer o escrit√≥rio da Google aqui no Brasil, onde participei de um treinamento Cloud, onde tive oportunidade de fazer um Deep-Dive em suas tecnologias para nuvem.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;mvpconf-latam-2019&quot;&gt;MVPCONF LATAM 2019&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/mvpconf.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Eu tive a oportunidade de entregar 3 palestras no maior evento t√©cnico de experts Microsoft, o MVPConf Latam edi√ß√£o 2019, mais de 2500 pessoas.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;reconhecimento-microsoft&quot;&gt;Reconhecimento Microsoft&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/mvp.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Pelo segundo ano consecutivo fui reconhecido pela Mirosoft com o t√≠tulo MVP, onde fa√ßo parte de um time seleto de profissionais, que procuram impactar e disseminar tecnologia.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;vs-summit-2019&quot;&gt;VS Summit 2019&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/vssummit1.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Este ano entreguei 2 palestra no &lt;b&gt;VSSummit&lt;/b&gt; evento esse organizado pelo &lt;b&gt;Ramon Dur√µes&lt;/b&gt;, que inclusive quero parabenizar pela qualidade do evento.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;developers-sergipe-summit-2019&quot;&gt;Developers Sergipe Summit 2019&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/developerssergipesummit2019.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
O desafio √© grande, mas o retorno √© gratificante, nosso evento acontece anualmente em nosso estado de Sergipe, onde trazemos profissionais de grandes players do Brasil e do Estado, para compartilhar conhecimento e impactar profissionais e amantes da tecnologia de nosso estado.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;amigos&quot;&gt;Amigos&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/amigos.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
A vida √© cheia de segredos, amigos, estou utilizando essa foto porque representa algo pra mim, foi uma noite marcante, curtimos muito, o &lt;b&gt;Eduardo Pires&lt;/b&gt; me apresentou um licor chamado &lt;b&gt;Jagermeister&lt;/b&gt; que terminei exagerando e me apagando kkkk.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;encontro-de-mvp&quot;&gt;Encontro de MVP&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/encontromvp.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Em dezembro tivemos nosso encontro na Microsoft fechado para todos MVP's do Brasil, foi um dia completo reunido com essa galera espetacular, fazendo network e conversando sobre o impacto na comunidade, amo todos voc√™s. #minhafamilia
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;oportunidade-microsoft&quot;&gt;Oportunidade Microsoft&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2020/presidente.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
E pra fechar com chave de ouro, tive a oportunidade conhecer a presidente da Microsoft Brasil, a Sr¬™ T√¢nia Cosentino.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Fico por aqui e um forte abra√ßo! üòÑ 
&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;#2019 #2020&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala meu amigo(a), tudo bem?! Agradecimentos Nossa, que ano foi esse 2019, muitas conquistas e realiza√ß√µes, e antes de come√ßar a escrever minha retrospectiva quero deixar aqui meu muito obrigado, a voc√™ que diretamente ou indiretamente me ajudou a passar este maravilhoso ano, com seus feedbacks, apoio e carinho. Fam√≠lia Quero agrade√ßer a minha esposa e minhas filhas por toda paci√™ncia que tiveram comigo, pedir desculpa pelo tempo que tive ausente, pois saiba que, voc√™s s√£o minha base, minha estrutura, eu amo voc√™s, quantas noites e quanto tempo ausente, mas voc√™s sempre me apoiando em todas minhas decis√µes e desafios. üíõ üíô üíú ‚ù§Ô∏è üíö Desafio Eu estava em uma fase de minha vida onde realmente procurava algo desafiador, ent√£o recebi um convite para fazer uma entrevista em Janeiro para uma poss√≠vel vaga nesta empresa espetacular, com uma cultura linda e empolgante, ent√£o no m√™s seguinte j√° iniciei as atividades, onde a cada dia que passa mais apaixonado fico, o desafio n√£o tem sido f√°cil, por√©m √© prazeroso. Tem me proporcionado um crescimento profissional, onde me sinto realizado! Mentor Tive/tenho a oportunidade de trabalhar com esse cara fenomenal Alexandre Brand√£o, tem sido um divisor de aguas em minha carreira profissional, tem me dado feedbacks extramamente evolutivos, sendo assim queria deixar aqui registrado meu muito obrigado por tudo. Bootcamp Realizamos um bootcamp na Universidade Mauricio de Nassau, onde tive o prazer de conhecer uma galera muito legal, dentre eles o David Counto e a Izabela Rezende, 2 seres vivos que Deus colocou em minha vida e hoje considero como familia, amo voc√™s 2 de cora√ß√£o! Google Em mar√ßo tamb√©m tive a oportunidade conhecer o escrit√≥rio da Google aqui no Brasil, onde participei de um treinamento Cloud, onde tive oportunidade de fazer um Deep-Dive em suas tecnologias para nuvem. MVPCONF LATAM 2019 Eu tive a oportunidade de entregar 3 palestras no maior evento t√©cnico de experts Microsoft, o MVPConf Latam edi√ß√£o 2019, mais de 2500 pessoas. Reconhecimento Microsoft Pelo segundo ano consecutivo fui reconhecido pela Mirosoft com o t√≠tulo MVP, onde fa√ßo parte de um time seleto de profissionais, que procuram impactar e disseminar tecnologia. VS Summit 2019 Este ano entreguei 2 palestra no VSSummit evento esse organizado pelo Ramon Dur√µes, que inclusive quero parabenizar pela qualidade do evento. Developers Sergipe Summit 2019 O desafio √© grande, mas o retorno √© gratificante, nosso evento acontece anualmente em nosso estado de Sergipe, onde trazemos profissionais de grandes players do Brasil e do Estado, para compartilhar conhecimento e impactar profissionais e amantes da tecnologia de nosso estado. Amigos A vida √© cheia de segredos, amigos, estou utilizando essa foto porque representa algo pra mim, foi uma noite marcante, curtimos muito, o Eduardo Pires me apresentou um licor chamado Jagermeister que terminei exagerando e me apagando kkkk. Encontro de MVP Em dezembro tivemos nosso encontro na Microsoft fechado para todos MVP's do Brasil, foi um dia completo reunido com essa galera espetacular, fazendo network e conversando sobre o impacto na comunidade, amo todos voc√™s. #minhafamilia Oportunidade Microsoft E pra fechar com chave de ouro, tive a oportunidade conhecer a presidente da Microsoft Brasil, a Sr¬™ T√¢nia Cosentino. Fico por aqui e um forte abra√ßo! üòÑ #2019 #2020</summary></entry><entry><title type="html">Ser√° que o Regex √© r√°pido?</title><link href="http://localhost:4000/dica/performanceregexvsspan/" rel="alternate" type="text/html" title="Ser√° que o Regex √© r√°pido?" /><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><id>http://localhost:4000/dica/performanceregexvsspan</id><content type="html" xml:base="http://localhost:4000/dica/performanceregexvsspan/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/PerformanceRegex.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoal, tudo bem?!&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;p&gt;Curiosidade leva nos sempre a pensar fora da caixa!!!&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
No artigo &lt;a href=&quot;http://ralms.net/dica/snakecase/&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;SNAKE CASE&lt;/a&gt; eu usei um &lt;b&gt;REGEX&lt;/b&gt; para aplicar 
a nomenclatura snake-case em uma &lt;b&gt;string&lt;/b&gt;, mas hoje doming√£o (madrugada ainda rss), fiquei pensando de quanto perform√°tico era esse m√©todo.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;certo-e&quot;&gt;Certo, e?&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Pois bem, fiquei inquieto e comecei a escrever alguns bits na tentativa de descobrir o que seria melhor em um 
ambiente onde eu precisaria processar milhares ou milh√µes de dados, ent√£o cheguei a construir alguns &lt;b&gt;m√©todos&lt;/b&gt;, para garantir a performance em um ambiente cr√≠tico, onde pode acontecer milhares ou milh√µes de intera√ß√µes por segundos.&lt;br /&gt;
&lt;br /&gt;
Eu sou f√£ do projeto &lt;b&gt;Newtonsoft&lt;/b&gt; por muito tempo ele entregou com maestria o que prometia, ent√£o fui estudar um pouco os fontes dele e me deparei com isso 
&lt;a href=&quot;https://github.com/JamesNK/Newtonsoft.Json/blob/master/Src/Newtonsoft.Json/Utilities/StringUtils.cs#L218&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;AQUI&lt;/a&gt;, ent√£o percebi que ele teve uma estrat√©gia para aumentar a performance na serializa√ß√£o, eu poderia
 copiar esse m√©todo dele e fazer os testes que eu queria, mas, a minha experi√™ncia n√£o seria a mesma, isso me motivou a criar alguns m√©todos que 
est√£o aqui neste pequeno artigo.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Vamos come√ßar?!&lt;br /&gt;
Veja os m√©todos que foram utilizados nos testes que executei.&lt;/p&gt;
&lt;h1 id=&quot;m√©todo-usando-regex&quot;&gt;M√©todo usando Regex&lt;/h1&gt;
&lt;p&gt;Esse foi o m√©todo usado no artigo citado acima. Simples e objetivo usando todo poder do Regex!&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCaseUsingRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;@&quot;([a-z0-9])([A-Z])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;&quot;$1_$2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;m√©todo-usando-linq&quot;&gt;M√©todo usando LINQ&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
N√£o poderia passar por aqui sem falar da importancia do LINQ dentro do ecosistema .NET, sem sombra de d√∫vidas √© uma das melhores implementa√ß√µes dentro da plataforma. 
O &lt;b&gt;LINQ&lt;/b&gt; √© simplesmente fant√°stico, pode ser usado praticamente pra manipular qualquer informa√ß√£o, eu te amo &lt;b&gt;LINQ&lt;/b&gt;.
&lt;/div&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCaseUsingLinq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
                    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;_&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; 
                    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;m√©todo-usando-stringbuilder-e-span&quot;&gt;M√©todo usando StringBuilder e Span&lt;T&gt;&lt;/T&gt;&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Aqui vamos come√ßar a brincadeira com essa nova implementa√ß√£o do .NET, o &lt;b&gt;SPAN&lt;/b&gt;, quando se fala em gerenciamento 
de mem√≥ria, lembre-se desse cara, nesse exemplo iremos fazer uma pequena mesclagem, com &lt;b&gt;SPAN&lt;/b&gt; e o &lt;b&gt;StringBuilder&lt;/b&gt; para empilhar temporariamente nossos caracteres.
&lt;/div&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCaseUsingStringBuildAndSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ReadOnlySpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'_'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringBuilder&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;m√©todo-usando-somente-span&quot;&gt;M√©todo usando somente Span&lt;T&gt;&lt;/T&gt;&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Aqui vamos usar o &lt;b&gt;SPAN&lt;/b&gt;, s√≥ que a √∫nica diferen√ßa √© que mudei a estrat√©gia e estou usando um buffer para mover a posi√ß√£o dos caracteres.
&lt;/div&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCaseUsingSpanOnBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undescores&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;undescores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;undescores&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'_'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_frase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;possitionOfBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;letterPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;resultado-dos-testes&quot;&gt;Resultado dos testes&lt;/h1&gt;
&lt;p&gt;Os testes foram realizando com 10, 100.000 e 1.000.000 de intera√ß√µes.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----------------------------------------------------------------
UsingStringBuilderAndSpan 10              Tempo: 00:00:00.0025257
                          100_000         Tempo: 00:00:00.1162287
                          1_000_000       Tempo: 00:00:02.0734867
-----------------------------------------------------------------
UsingSpanOnBuffer         10              Tempo: 00:00:00.0004815
                          100_000         Tempo: 00:00:00.1087459
                          1_000_000       Tempo: 00:00:01.0008935
-----------------------------------------------------------------
UsingRegex                10              Tempo: 00:00:00.0606576
                          100_000         Tempo: 00:00:00.5761851
                          1_000_000       Tempo: 00:00:06.2264039
-----------------------------------------------------------------
UsingLinq                 10              Tempo: 00:00:00.0089215
                          100_000         Tempo: 00:00:00.2520451
                          1_000_000       Tempo: 00:00:02.7254307
-----------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Podemos observar que o &lt;b&gt;REGEX&lt;/b&gt; teve a pior performance aqui, na verdade quando o assunto foi processar muita informa√ß√£o, ele foi p√©ssimo, nossa 
mais de 6 segundos, em um ambiente de produ√ß√£o e cr√≠tico escorre at√© l√°grimas dos olhos, j√° o &lt;b&gt;LINQ&lt;/b&gt; me surpreendeu novamente 
mostrando que ainda √© muito eficiente em cen√°rios cr√≠ticos, os m√©todos implementados usando &lt;b&gt;SPAN&lt;/b&gt; tiveram a melhor performance.
 &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;benchmark&quot;&gt;Benchmark&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;BenchmarkDotNet=v0.12.0, OS=Windows 10.0.18362
Intel Core i7-7500U CPU 2.70GHz (Kaby Lake), 1 CPU, 4 logical and 2 physical cores
.NET Core SDK=3.1.100
  [Host]     : .NET Core 3.1.0 (CoreCLR 4.700.19.56402, CoreFX 4.700.19.56404), X64 RyuJIT  [AttachedDebugger]
  DefaultJob : .NET Core 3.1.0 (CoreCLR 4.700.19.56402, CoreFX 4.700.19.56404), X64 RyuJIT


|                             Method |       Mean |     Error |    StdDev |     Median | Rank |  Gen 0 | Gen 1 | Gen 2 | Allocated |
|----------------------------------- |-----------:|----------:|----------:|-----------:|-----:|-------:|------:|------:|----------:|
|       ToSnakeCaseUsingSpanOnBuffer |   387.2 ns |   6.99 ns |   6.54 ns |   387.0 ns |    1 | 0.1831 |     - |     - |     384 B |
| ToSnakeCaseUsingStringBuildAndSpan |   473.0 ns |   9.42 ns |  16.00 ns |   469.5 ns |    2 | 0.3328 |     - |     - |     696 B |
|               ToSnakeCaseUsingLinq | 1,763.3 ns |  69.64 ns | 198.68 ns | 1,680.1 ns |    3 | 0.7839 |     - |     - |    1640 B |
|              ToSnakeCaseUsingRegex | 5,438.9 ns | 193.14 ns | 531.95 ns | 5,292.9 ns |    4 | 1.1520 |     - |     - |    2416 B |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Podemos observar que o &lt;b&gt;REGEX&lt;/b&gt; novamente teve a pior performance aqui, chegando a alocar mais de 2K na mem√≥ria, enquanto o &lt;b&gt;LINQ&lt;/b&gt; alocou apenas sua metade, 
e os m√©todos que usamos &lt;b&gt;SPAN&lt;/b&gt; teve o melhor comportamento, alocando muito menos mem√≥ria.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;um-pouco-sobre-span&quot;&gt;Um pouco sobre Span&lt;T&gt;&lt;/T&gt;&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
O &lt;b&gt;Span&lt;/b&gt; √© uma struct, uma nova feature do .NET, o objetivo principal do team do .NET ter escrito √©, diminuir o impacto na mem√≥ria gerenciada, a heap, e, para 
eu n√£o ser muito redundante tem um artigo muito legal do &lt;b&gt;Stephen Toub&lt;/b&gt; 
falando mais sobre o Span, √© basicamente o Deep-Dive dentro do Span.&lt;br /&gt; 
Fica dica de leitura: &lt;a href=&quot;https://docs.microsoft.com/pt-br/archive/msdn-magazine/2018/january/csharp-all-about-span-exploring-a-new-net-mainstay&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;SPAN by Stephen Toub&lt;/a&gt;.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;o-que-aprendemos-com-isso&quot;&gt;O que aprendemos com isso?&lt;/h1&gt;
&lt;div class=&quot;notice--warning&quot; style=&quot;text-align: justify;&quot;&gt;
Aprendemos que mesmo que o .NET j√° nos forne√ßa uma pilha de bibliotecas, com m√©todos quase prontos, n√£o se acomode, em vez disso teste 
e analise seu cen√°rio, quanto mais cr√≠tico ele for, mais a necessidade de performance voc√™ ter√°, pense fora da caixa, muitas das vezes voc√™ escrever seus pr√≥prios m√©todos pode ser a melhor op√ß√£o.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;fontes&quot;&gt;Fontes&lt;/h1&gt;
&lt;p&gt;Os fontes do exemplo usado est√° aqui:&lt;br /&gt;
&lt;a href=&quot;https://github.com/ralmsdeveloper/performanceregex&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
https://github.com/ralmsdeveloper/performanceregex
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Fico por aqui e um forte abra√ßo! üòÑ 
&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #performance #efcore31 #netcore31 #span&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoal, tudo bem?! Curiosidade leva nos sempre a pensar fora da caixa!!! No artigo SNAKE CASE eu usei um REGEX para aplicar a nomenclatura snake-case em uma string, mas hoje doming√£o (madrugada ainda rss), fiquei pensando de quanto perform√°tico era esse m√©todo. Certo, e? Pois bem, fiquei inquieto e comecei a escrever alguns bits na tentativa de descobrir o que seria melhor em um ambiente onde eu precisaria processar milhares ou milh√µes de dados, ent√£o cheguei a construir alguns m√©todos, para garantir a performance em um ambiente cr√≠tico, onde pode acontecer milhares ou milh√µes de intera√ß√µes por segundos. Eu sou f√£ do projeto Newtonsoft por muito tempo ele entregou com maestria o que prometia, ent√£o fui estudar um pouco os fontes dele e me deparei com isso AQUI, ent√£o percebi que ele teve uma estrat√©gia para aumentar a performance na serializa√ß√£o, eu poderia copiar esse m√©todo dele e fazer os testes que eu queria, mas, a minha experi√™ncia n√£o seria a mesma, isso me motivou a criar alguns m√©todos que est√£o aqui neste pequeno artigo. Vamos come√ßar?! Veja os m√©todos que foram utilizados nos testes que executei. M√©todo usando Regex Esse foi o m√©todo usado no artigo citado acima. Simples e objetivo usando todo poder do Regex! public string ToSnakeCaseUsingRegex() { return Regex .Replace( _frase, @&quot;([a-z0-9])([A-Z])&quot;, &quot;$1_$2&quot;, RegexOptions.Compiled) .ToLower(); } M√©todo usando LINQ N√£o poderia passar por aqui sem falar da importancia do LINQ dentro do ecosistema .NET, sem sombra de d√∫vidas √© uma das melhores implementa√ß√µes dentro da plataforma. O LINQ √© simplesmente fant√°stico, pode ser usado praticamente pra manipular qualquer informa√ß√£o, eu te amo LINQ. public string ToSnakeCaseUsingLinq() { return string .Concat(_frase .Select((c, i) =&amp;gt; i &amp;gt; 0 &amp;amp;&amp;amp; char.IsUpper(c) ? &quot;_&quot; + c : c.ToString())) .ToLower(); } M√©todo usando StringBuilder e Span Aqui vamos come√ßar a brincadeira com essa nova implementa√ß√£o do .NET, o SPAN, quando se fala em gerenciamento de mem√≥ria, lembre-se desse cara, nesse exemplo iremos fazer uma pequena mesclagem, com SPAN e o StringBuilder para empilhar temporariamente nossos caracteres. public string ToSnakeCaseUsingStringBuildAndSpan() { ReadOnlySpan&amp;lt;char&amp;gt; frase = _frase; var stringBuilder = new StringBuilder(); for (var i = 0; i &amp;lt; frase.Length; i++) { if (char.IsUpper(frase[i]) &amp;amp;&amp;amp; frase[0] != frase[i]) { stringBuilder.Append('_'); stringBuilder.Append(frase[i]); } else { stringBuilder.Append(frase[i]); } } return stringBuilder .ToString() .ToLower(); } M√©todo usando somente Span Aqui vamos usar o SPAN, s√≥ que a √∫nica diferen√ßa √© que mudei a estrat√©gia e estou usando um buffer para mover a posi√ß√£o dos caracteres. public string ToSnakeCaseUsingSpanOnBuffer() { var undescores = 0; for (var i = 0; i &amp;lt; _frase.Length; i++) { if (char.IsUpper(_frase[i])) { undescores++; } } var length = (undescores + _frase.Length) - 1; Span&amp;lt;char&amp;gt; buffer = new char[length]; var possitionOfBuffer = 0; var letterPosition = 0; while (possitionOfBuffer &amp;lt; buffer.Length) { if (letterPosition &amp;gt; 0 &amp;amp;&amp;amp; char.IsUpper(_frase[letterPosition])) { buffer[possitionOfBuffer] = '_'; buffer[possitionOfBuffer + 1] = _frase[letterPosition]; possitionOfBuffer += 2; letterPosition++; continue; } buffer[possitionOfBuffer] = _frase[letterPosition]; possitionOfBuffer++; letterPosition++; } return buffer .ToString() .ToLower(); } Resultado dos testes Os testes foram realizando com 10, 100.000 e 1.000.000 de intera√ß√µes. ----------------------------------------------------------------- UsingStringBuilderAndSpan 10 Tempo: 00:00:00.0025257 100_000 Tempo: 00:00:00.1162287 1_000_000 Tempo: 00:00:02.0734867 ----------------------------------------------------------------- UsingSpanOnBuffer 10 Tempo: 00:00:00.0004815 100_000 Tempo: 00:00:00.1087459 1_000_000 Tempo: 00:00:01.0008935 ----------------------------------------------------------------- UsingRegex 10 Tempo: 00:00:00.0606576 100_000 Tempo: 00:00:00.5761851 1_000_000 Tempo: 00:00:06.2264039 ----------------------------------------------------------------- UsingLinq 10 Tempo: 00:00:00.0089215 100_000 Tempo: 00:00:00.2520451 1_000_000 Tempo: 00:00:02.7254307 ----------------------------------------------------------------- Podemos observar que o REGEX teve a pior performance aqui, na verdade quando o assunto foi processar muita informa√ß√£o, ele foi p√©ssimo, nossa mais de 6 segundos, em um ambiente de produ√ß√£o e cr√≠tico escorre at√© l√°grimas dos olhos, j√° o LINQ me surpreendeu novamente mostrando que ainda √© muito eficiente em cen√°rios cr√≠ticos, os m√©todos implementados usando SPAN tiveram a melhor performance. Benchmark BenchmarkDotNet=v0.12.0, OS=Windows 10.0.18362 Intel Core i7-7500U CPU 2.70GHz (Kaby Lake), 1 CPU, 4 logical and 2 physical cores .NET Core SDK=3.1.100 [Host] : .NET Core 3.1.0 (CoreCLR 4.700.19.56402, CoreFX 4.700.19.56404), X64 RyuJIT [AttachedDebugger] DefaultJob : .NET Core 3.1.0 (CoreCLR 4.700.19.56402, CoreFX 4.700.19.56404), X64 RyuJIT | Method | Mean | Error | StdDev | Median | Rank | Gen 0 | Gen 1 | Gen 2 | Allocated | |----------------------------------- |-----------:|----------:|----------:|-----------:|-----:|-------:|------:|------:|----------:| | ToSnakeCaseUsingSpanOnBuffer | 387.2 ns | 6.99 ns | 6.54 ns | 387.0 ns | 1 | 0.1831 | - | - | 384 B | | ToSnakeCaseUsingStringBuildAndSpan | 473.0 ns | 9.42 ns | 16.00 ns | 469.5 ns | 2 | 0.3328 | - | - | 696 B | | ToSnakeCaseUsingLinq | 1,763.3 ns | 69.64 ns | 198.68 ns | 1,680.1 ns | 3 | 0.7839 | - | - | 1640 B | | ToSnakeCaseUsingRegex | 5,438.9 ns | 193.14 ns | 531.95 ns | 5,292.9 ns | 4 | 1.1520 | - | - | 2416 B | Podemos observar que o REGEX novamente teve a pior performance aqui, chegando a alocar mais de 2K na mem√≥ria, enquanto o LINQ alocou apenas sua metade, e os m√©todos que usamos SPAN teve o melhor comportamento, alocando muito menos mem√≥ria. Um pouco sobre Span O Span √© uma struct, uma nova feature do .NET, o objetivo principal do team do .NET ter escrito √©, diminuir o impacto na mem√≥ria gerenciada, a heap, e, para eu n√£o ser muito redundante tem um artigo muito legal do Stephen Toub falando mais sobre o Span, √© basicamente o Deep-Dive dentro do Span. Fica dica de leitura: SPAN by Stephen Toub. O que aprendemos com isso? Aprendemos que mesmo que o .NET j√° nos forne√ßa uma pilha de bibliotecas, com m√©todos quase prontos, n√£o se acomode, em vez disso teste e analise seu cen√°rio, quanto mais cr√≠tico ele for, mais a necessidade de performance voc√™ ter√°, pense fora da caixa, muitas das vezes voc√™ escrever seus pr√≥prios m√©todos pode ser a melhor op√ß√£o. Fontes Os fontes do exemplo usado est√° aqui: https://github.com/ralmsdeveloper/performanceregex Fico por aqui e um forte abra√ßo! üòÑ #mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #performance #efcore31 #netcore31 #span</summary></entry><entry><title type="html">Interceptando comandos - EF Core 3.1</title><link href="http://localhost:4000/dica/efcore31_operations_interception/" rel="alternate" type="text/html" title="Interceptando comandos - EF Core 3.1" /><published>2019-12-05T00:00:00+00:00</published><updated>2019-12-05T00:00:00+00:00</updated><id>http://localhost:4000/dica/efcore31_operations_interception</id><content type="html" xml:base="http://localhost:4000/dica/efcore31_operations_interception/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/efcoreinterception.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoal, tudo bem?!&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;sonho-realizado&quot;&gt;Sonho realizado&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Voc√™ nem imagina o quanto de pessoas esperando por isso, sim, estou falando de uma forma de interceptar toda opera√ß√£o de banco de dados, j√° que isso era poss√≠vel no EF6, mas um dos engenheiros do 
time do EF Core tornou isso poss√≠vel para EFCore, Thanks &lt;b&gt;Arthur Vickers&lt;/b&gt;, dito isso agora voc√™ pode alterar/otimizar a query que vai ser executada 
no banco dados, sobrescrevendo os m√©todos da classe &lt;b&gt;DbCommandInterceptor&lt;/b&gt;. Veja alguns dos m√©todos que voc√™ pode sobrescrever 
e ser √∫til pra voc√™.
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;NonQueryExecuted&lt;/li&gt;
  &lt;li&gt;ScalarExecuting&lt;/li&gt;
  &lt;li&gt;ReaderExecuting&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vamos-ver-como-isso-funciona&quot;&gt;Vamos ver como isso funciona&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
A implementa√ß√£o √© bem simples, basta criar uma classe que herde de &lt;b&gt;DbCommandInterceptor&lt;/b&gt;, por exemplo:
&lt;/div&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RalmsInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbCommandInterceptor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Vamos sobrescrever o m√©todo &lt;b&gt;ReaderExecuting&lt;/b&gt;, isso significa que mesmo antes de enviar o comando para o banco de dados, 
podemos interceptar e fazer os ajustes que assim for necess√°rio.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RalmsInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbCommandInterceptor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterceptionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbDataReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ReaderExecuting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DbCommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;CommandEventData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;InterceptionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbDataReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//command.CommandText = ...&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;como-usar-nosso-pequeno-interceptador&quot;&gt;Como usar nosso pequeno Interceptador?&lt;/h2&gt;
&lt;p&gt;1 - Voc√™ pode adicionar diretamente em seu DbContext.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RalmsContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbContext&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnConfiguring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbContextOptionsBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;Server=(localdb)\mssqllocaldb;Database=EFCORE31;Trusted_Connection=True;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RalmsInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2 - Ou/Em seu Services que basicamente √© a mesma coisa&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddControllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RalmsContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseSqlServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;Server=...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddInterceptors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RalmsInterceptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;montando-um-cen√°rio-de-uso&quot;&gt;Montando um cen√°rio de uso&lt;/h2&gt;
&lt;p&gt;Sabendo como criar nosso interceptador e como usar, agora vamos pensar em um cen√°rio onde voc√™ gostaria de usar o &lt;a href=&quot;https://docs.microsoft.com/pt-br/sql/t-sql/queries/hints-transact-sql-table?view=sql-server-ver15&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;HINT NOLOCK&lt;/a&gt; 
j√° que isso ainda n√£o √© suportado nativamente pelo EF Core, pois bem aqui agente pode fazer um workaround.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RalmsInterceptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbCommandInterceptor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_tableAliasRegex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;(?&amp;lt;tableAlias&amp;gt;FROM +(\[.*\]\.)?(\[.*\]) AS (\[.*\])(?! WITH \(NOLOCK\)))&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Multiline&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IgnoreCase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InterceptionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbDataReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ReaderExecuting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DbCommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CommandEventData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;InterceptionResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbDataReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommandText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WITH (NOLOCK)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommandText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_tableAliasRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommandText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;${tableAlias} WITH (NOLOCK)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;vamos-testar&quot;&gt;Vamos testar?&lt;/h2&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.AspNetCore.Mvc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Interceptador.Controllers&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ApiController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;[controller]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControllerBase&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RalmsContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TestController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RalmsContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sampleContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_db&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sampleContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpGet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IActionResult&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;agora-veja-nossa-query&quot;&gt;Agora veja nossa query&lt;/h2&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- _db.People.Count();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOLOCK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- _db.People.ToList();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;City&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirstName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;People&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOLOCK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Os fontes do exemplo usado est√° aqui:&lt;br /&gt;
&lt;a href=&quot;https://github.com/ralmsdeveloper/EFCoreInterceptador&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
https://github.com/ralmsdeveloper/EFCoreInterceptador
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Eu fico por aqui e um forte abra√ßo! üòÑ 
&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #sqlserver #efcore31 #netcore31 #aspnetcore&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoal, tudo bem?! Sonho realizado Voc√™ nem imagina o quanto de pessoas esperando por isso, sim, estou falando de uma forma de interceptar toda opera√ß√£o de banco de dados, j√° que isso era poss√≠vel no EF6, mas um dos engenheiros do time do EF Core tornou isso poss√≠vel para EFCore, Thanks Arthur Vickers, dito isso agora voc√™ pode alterar/otimizar a query que vai ser executada no banco dados, sobrescrevendo os m√©todos da classe DbCommandInterceptor. Veja alguns dos m√©todos que voc√™ pode sobrescrever e ser √∫til pra voc√™. NonQueryExecuted ScalarExecuting ReaderExecuting Vamos ver como isso funciona A implementa√ß√£o √© bem simples, basta criar uma classe que herde de DbCommandInterceptor, por exemplo: public class RalmsInterceptor : DbCommandInterceptor { } Vamos sobrescrever o m√©todo ReaderExecuting, isso significa que mesmo antes de enviar o comando para o banco de dados, podemos interceptar e fazer os ajustes que assim for necess√°rio. public class RalmsInterceptor : DbCommandInterceptor { public override InterceptionResult&amp;lt;DbDataReader&amp;gt; ReaderExecuting( DbCommand command, CommandEventData eventData, InterceptionResult&amp;lt;DbDataReader&amp;gt; result) { //command.CommandText = ... return result; } } Como usar nosso pequeno Interceptador? 1 - Voc√™ pode adicionar diretamente em seu DbContext. public class RalmsContext : DbContext { protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { optionsBuilder .UseSqlServer(@&quot;Server=(localdb)\mssqllocaldb;Database=EFCORE31;Trusted_Connection=True;&quot;) .AddInterceptors(new RalmsInterceptor()); } } 2 - Ou/Em seu Services que basicamente √© a mesma coisa public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services .AddDbContext&amp;lt;RalmsContext&amp;gt;(p=&amp;gt;p .UseSqlServer(@&quot;Server=...&quot;) .AddInterceptors(new RalmsInterceptor())); } Montando um cen√°rio de uso Sabendo como criar nosso interceptador e como usar, agora vamos pensar em um cen√°rio onde voc√™ gostaria de usar o HINT NOLOCK j√° que isso ainda n√£o √© suportado nativamente pelo EF Core, pois bem aqui agente pode fazer um workaround. public class RalmsInterceptor : DbCommandInterceptor { private static readonly Regex _tableAliasRegex = new Regex(@&quot;(?&amp;lt;tableAlias&amp;gt;FROM +(\[.*\]\.)?(\[.*\]) AS (\[.*\])(?! WITH \(NOLOCK\)))&quot;, RegexOptions.Multiline | RegexOptions.IgnoreCase | RegexOptions.Compiled); public override InterceptionResult&amp;lt;DbDataReader&amp;gt; ReaderExecuting( DbCommand command, CommandEventData eventData, InterceptionResult&amp;lt;DbDataReader&amp;gt; result) { if (!command.CommandText.Contains(&quot;WITH (NOLOCK)&quot;)) { command.CommandText = _tableAliasRegex.Replace(command.CommandText, &quot;${tableAlias} WITH (NOLOCK)&quot;); } return result; } } Vamos testar? using System.Linq; using Microsoft.AspNetCore.Mvc; namespace Interceptador.Controllers { [ApiController] [Route(&quot;[controller]&quot;)] public class TestController : ControllerBase { private readonly RalmsContext _db; public TestController(RalmsContext sampleContext) { _db = sampleContext; } [HttpGet] public IActionResult Get() { _ = _db.People.Count(); _ = _db.People.ToList(); return Ok(); } } } Agora veja nossa query -- _db.People.Count(); SELECT COUNT(*) FROM [People] AS [p] WITH (NOLOCK) -- _db.People.ToList(); SELECT [p].[Id], [p].[City], [p].[FirstName], [p].[LastName] FROM [People] AS [p] WITH (NOLOCK) Os fontes do exemplo usado est√° aqui: https://github.com/ralmsdeveloper/EFCoreInterceptador Eu fico por aqui e um forte abra√ßo! üòÑ #mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #sqlserver #efcore31 #netcore31 #aspnetcore</summary></entry><entry><title type="html">System.Text.JSON - ASPNET Core 3.1</title><link href="http://localhost:4000/dica/snakecase_aspnetcore31/" rel="alternate" type="text/html" title="System.Text.JSON - ASPNET Core 3.1" /><published>2019-12-03T00:00:00+00:00</published><updated>2019-12-03T00:00:00+00:00</updated><id>http://localhost:4000/dica/snakecase_aspnetcore31</id><content type="html" xml:base="http://localhost:4000/dica/snakecase_aspnetcore31/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/JsonNamePolicy.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoal, tudo bem?! üíö&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;porque-estamos-aqui&quot;&gt;Porque estamos aqui?&lt;/h2&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Eu acredito que voc√™ j√° sabe, e se n√£o sabe, ficar√° agora, que a Microsoft escreveu seu proprio Serializador JSON que est√° no namespace &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
System.Text.Json 
&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;
Como sempre a Microsoft vem trabalhando duro para entregar features sempre focadas em performance, sendo assim System.Text.Json foi 
escrito exatamente com esse objetivo, alocar menos mem√≥ria e ser mais r√°pido, podendo ter um ganho de desempenho de &lt;b&gt;1.3x at√© 5x&lt;/b&gt; sobre o JSON.NET(Newtonsoft).&lt;br /&gt;
&lt;br /&gt;
&lt;b&gt;FYI:&lt;/b&gt; Se seu projeto √© em .NET Core, voc√™ j√° vai ter acesso ao namespace/pacote que informei acima, caso voc√™ esteja usando 
.NETStandard ou .NET Framework, voc√™ ir√° precisar instalar o pacote &lt;a href=&quot;https://www.nuget.org/packages/System.Text.Json&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;System.Text.Json&lt;/a&gt;.
&lt;/div&gt;
&lt;h2 id=&quot;e-a-d√∫vida&quot;&gt;E a d√∫vida?&lt;/h2&gt;
&lt;p&gt;Sei que assim como eu, muitos de voc√™s ficaram se perguntando sobre usar ou n√£o usar o 
&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
System.Text.Json 
&lt;/a&gt; no lugar do &lt;a href=&quot;https://www.newtonsoft.com/json&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;Newtonsoft&lt;/a&gt;, pois bem, tivemos algumas limita√ß√µes, e quero tratar nesse artigo sobre uma delas especialmente 
que √© sobre a serializa√ß√£o dos objetos aplicando a nomenclatura snake-case, isso era simplesmente f√°cil usando o &lt;a href=&quot;https://www.newtonsoft.com/json&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;Newtonsoft&lt;/a&gt;, pois ele fornecia uma implementa√ß√£o para usarmos essa estrat√©gia.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IServiceProvider&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddJsonOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SerializerSettings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ContractResolver&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultContractResolver&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;NamingStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SnakeCaseNamingStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
A Microsoft lan√ßou hoje(03/12/2019) a vers√£o do &lt;a href=&quot;https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;ASPNET Core 3.1&lt;/a&gt; ent√£o resolvi unir o √∫til ao agradavel, escrevendo 
este artigo e testando j√° a nova vers√£o, olha que legal, isso pra mim ser√° uma divers√£o!&lt;/p&gt;

&lt;h2 id=&quot;alterando-o-comportamento-da-serializa√ß√£o&quot;&gt;Alterando o comportamento da serializa√ß√£o&lt;/h2&gt;
&lt;p&gt;Ent√£o dado um cen√°rio onde a empresa ou voc√™, deseja padronizar a entrega de seus dados usando a nomenclatura snake-case ou qualquer outro padr√£o, como podemos alterar esse comportamento j√° que s√≥ existe a implementa√ß√£o para CamelCase.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddControllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddJsonOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyNamingPolicy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonNamingPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CamelCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IgnoreNullValues&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteIndented&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AllowTrailingCommas&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Converters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonStringEnumConverter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;notice--success&quot; style=&quot;text-align: justify;&quot;&gt;
Observe que agora temos uma propriedade &lt;b&gt;PropertyNamingPolicy&lt;/b&gt; que substitui o antigo &lt;b&gt;NamingStrategy&lt;/b&gt; do Newtonsoft, aqui √© onde iremos come√ßar a brincadeira, lembrando que esse assunto pode ir muito mais al√©m, por√©m o foco √© como resolver o c√©nario onde quero entregar os dados aplicando a nomenclatura SnakeCase.
&lt;/div&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
JsonNamingPolicy √© uma classe abstrata onde podemos sobreescrever o comportamente do m√©todo respons√°vel por devolver os nomes
das propriedades do objeto, ent√£o, irei criar uma classe onde iremos sobrescrever 1(um) m√©todo da classe &lt;b&gt;JsonNamingPolicy&lt;/b&gt; o &lt;b&gt;ConvertName&lt;/b&gt;.
&lt;/div&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CustomPropertyNamingPolicy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonNamingPolicy&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConvertName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrWhiteSpace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;@&quot;([a-z0-9])([A-Z])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;$1_$2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;configure-services&quot;&gt;Configure Services&lt;/h2&gt;
&lt;p&gt;Agora √© s√≥ informar qual politca de serializa√ß√£o ser√° usada, neste caso o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CustomPropertyNamingPolicy&lt;/code&gt;, veja como ficou nossa configura√ß√£o agora.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddControllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AddJsonOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyNamingPolicy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CustomPropertyNamingPolicy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IgnoreNullValues&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteIndented&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AllowTrailingCommas&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JsonSerializerOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Converters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JsonStringEnumConverter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;exemplo&quot;&gt;Exemplo&lt;/h2&gt;
&lt;p&gt;Para o exemplo deste artigo, utilizamos a seguinte classe:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BirtdayDate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FullName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;output&quot;&gt;Output&lt;/h2&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;birtday_date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-12-05T00:21:37.7799448-03:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;full_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Heloysa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ralms@ralms.net&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;birtday_date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-12-06T00:21:37.7817476-03:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;full_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Thysbe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ralms@ralms.net&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;birtday_date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-12-07T00:21:37.781753-03:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;full_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Rafael&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ralms@ralms.net&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;birtday_date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-12-08T00:21:37.7817534-03:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;full_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Eduarda&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ralms@ralms.net&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;birtday_date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-12-09T00:21:37.7817536-03:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;full_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Heloysa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ralms@ralms.net&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Os fontes do exemplo usado est√° aqui:&lt;br /&gt;
&lt;a href=&quot;https://github.com/ralmsdeveloper/AspNet31JsonNamePolicy&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
https://github.com/ralmsdeveloper/AspNet31JsonNamePolicy
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Pessoal fico por aqui e um forte abra√ßo! üòÑ 
 &lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #postgresql #efcore31 #netcore31 #aspnetcore&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoal, tudo bem?! üíö Porque estamos aqui? Eu acredito que voc√™ j√° sabe, e se n√£o sabe, ficar√° agora, que a Microsoft escreveu seu proprio Serializador JSON que est√° no namespace System.Text.Json . Como sempre a Microsoft vem trabalhando duro para entregar features sempre focadas em performance, sendo assim System.Text.Json foi escrito exatamente com esse objetivo, alocar menos mem√≥ria e ser mais r√°pido, podendo ter um ganho de desempenho de 1.3x at√© 5x sobre o JSON.NET(Newtonsoft). FYI: Se seu projeto √© em .NET Core, voc√™ j√° vai ter acesso ao namespace/pacote que informei acima, caso voc√™ esteja usando .NETStandard ou .NET Framework, voc√™ ir√° precisar instalar o pacote System.Text.Json. E a d√∫vida? Sei que assim como eu, muitos de voc√™s ficaram se perguntando sobre usar ou n√£o usar o System.Text.Json no lugar do Newtonsoft, pois bem, tivemos algumas limita√ß√µes, e quero tratar nesse artigo sobre uma delas especialmente que √© sobre a serializa√ß√£o dos objetos aplicando a nomenclatura snake-case, isso era simplesmente f√°cil usando o Newtonsoft, pois ele fornecia uma implementa√ß√£o para usarmos essa estrat√©gia. public IServiceProvider ConfigureServices(IServiceCollection services) { services .AddJsonOptions(options =&amp;gt; options .SerializerSettings.ContractResolver = new DefaultContractResolver { NamingStrategy = new SnakeCaseNamingStrategy() }) } A Microsoft lan√ßou hoje(03/12/2019) a vers√£o do ASPNET Core 3.1 ent√£o resolvi unir o √∫til ao agradavel, escrevendo este artigo e testando j√° a nova vers√£o, olha que legal, isso pra mim ser√° uma divers√£o! Alterando o comportamento da serializa√ß√£o Ent√£o dado um cen√°rio onde a empresa ou voc√™, deseja padronizar a entrega de seus dados usando a nomenclatura snake-case ou qualquer outro padr√£o, como podemos alterar esse comportamento j√° que s√≥ existe a implementa√ß√£o para CamelCase. public void ConfigureServices(IServiceCollection services) { services.AddControllers().AddJsonOptions(options =&amp;gt; { options.JsonSerializerOptions.PropertyNamingPolicy = JsonNamingPolicy.CamelCase; options.JsonSerializerOptions.IgnoreNullValues = true; options.JsonSerializerOptions.WriteIndented = false; options.JsonSerializerOptions.AllowTrailingCommas = false; options.JsonSerializerOptions.Converters.Add(new JsonStringEnumConverter()); }); } Observe que agora temos uma propriedade PropertyNamingPolicy que substitui o antigo NamingStrategy do Newtonsoft, aqui √© onde iremos come√ßar a brincadeira, lembrando que esse assunto pode ir muito mais al√©m, por√©m o foco √© como resolver o c√©nario onde quero entregar os dados aplicando a nomenclatura SnakeCase. JsonNamingPolicy √© uma classe abstrata onde podemos sobreescrever o comportamente do m√©todo respons√°vel por devolver os nomes das propriedades do objeto, ent√£o, irei criar uma classe onde iremos sobrescrever 1(um) m√©todo da classe JsonNamingPolicy o ConvertName. public class CustomPropertyNamingPolicy : JsonNamingPolicy { public override string ConvertName(string name) =&amp;gt; ToSnakeCase(name); private static string ToSnakeCase(string name) { return string.IsNullOrWhiteSpace(name) ? name : Regex.Replace( name, @&quot;([a-z0-9])([A-Z])&quot;, &quot;$1_$2&quot;, RegexOptions.Compiled, TimeSpan.FromSeconds(0.2)).ToLower(); } } Configure Services Agora √© s√≥ informar qual politca de serializa√ß√£o ser√° usada, neste caso o CustomPropertyNamingPolicy, veja como ficou nossa configura√ß√£o agora. public void ConfigureServices(IServiceCollection services) { services.AddControllers().AddJsonOptions(options =&amp;gt; { options.JsonSerializerOptions.PropertyNamingPolicy = new CustomPropertyNamingPolicy(); options.JsonSerializerOptions.IgnoreNullValues = true; options.JsonSerializerOptions.WriteIndented = false; options.JsonSerializerOptions.AllowTrailingCommas = false; options.JsonSerializerOptions.Converters.Add(new JsonStringEnumConverter()); }); } Exemplo Para o exemplo deste artigo, utilizamos a seguinte classe: public class Person { public DateTime BirtdayDate { get; set; } public string FullName { get; set; } public string Email { get; set; } } Output [ { &quot;birtday_date&quot;: &quot;2019-12-05T00:21:37.7799448-03:00&quot;, &quot;full_name&quot;: &quot;Heloysa&quot;, &quot;email&quot;: &quot;ralms@ralms.net&quot; }, { &quot;birtday_date&quot;: &quot;2019-12-06T00:21:37.7817476-03:00&quot;, &quot;full_name&quot;: &quot;Thysbe&quot;, &quot;email&quot;: &quot;ralms@ralms.net&quot; }, { &quot;birtday_date&quot;: &quot;2019-12-07T00:21:37.781753-03:00&quot;, &quot;full_name&quot;: &quot;Rafael&quot;, &quot;email&quot;: &quot;ralms@ralms.net&quot; }, { &quot;birtday_date&quot;: &quot;2019-12-08T00:21:37.7817534-03:00&quot;, &quot;full_name&quot;: &quot;Eduarda&quot;, &quot;email&quot;: &quot;ralms@ralms.net&quot; }, { &quot;birtday_date&quot;: &quot;2019-12-09T00:21:37.7817536-03:00&quot;, &quot;full_name&quot;: &quot;Heloysa&quot;, &quot;email&quot;: &quot;ralms@ralms.net&quot; } ] Os fontes do exemplo usado est√° aqui: https://github.com/ralmsdeveloper/AspNet31JsonNamePolicy Pessoal fico por aqui e um forte abra√ßo! üòÑ #mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #postgresql #efcore31 #netcore31 #aspnetcore</summary></entry><entry><title type="html">Breaking changes - EF Core 3.1</title><link href="http://localhost:4000/dica/snakecase_efcore31/" rel="alternate" type="text/html" title="Breaking changes - EF Core 3.1" /><published>2019-12-03T00:00:00+00:00</published><updated>2019-12-03T00:00:00+00:00</updated><id>http://localhost:4000/dica/snakecase_efcore31</id><content type="html" xml:base="http://localhost:4000/dica/snakecase_efcore31/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/efcorecsharp.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoal, tudo bem?! üíö&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;p&gt;Veja como fazer conven√ß√µes de nomenclatura &lt;strong&gt;SnakeCase&lt;/strong&gt; de forma f√°cil para o &lt;strong&gt;Entity Framework Core 3.1&lt;/strong&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/camelsnakecase.jpg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;notice--warning&quot;&gt;
&lt;strong&gt;FYI:&lt;/strong&gt;&lt;br /&gt;
Este artigo √© uma vers√£o atualizada de:
&lt;a href=&quot;http://ralms.net/dica/snakecase/&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
http://ralms.net/dica/snakecase/
&lt;/a&gt;
&lt;br /&gt;
O objetivo maior deste artigo √© mostrar as altera√ß√µes na API de metadados do Entity Framework Core 3.x.
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/tipocase.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;veja-esse-artigo&quot;&gt;Veja esse artigo!&lt;/h1&gt;
&lt;p&gt;Quer ver um resumid√£o sobre &lt;b&gt;Naming Conventions&lt;/b&gt;?&lt;br /&gt;
acesse esse link:
&lt;a href=&quot;http://ralms.net/dica/snakecase/&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
http://ralms.net/dica/snakecase/
&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;o-que-me-levou-a-escrever-esse-artigo&quot;&gt;O que me levou a escrever esse artigo?&lt;/h1&gt;
&lt;p&gt;N√£o quero me prolongar aqui, dado que j√° escrevi um artigo falando sobre minha real necessidade de utilizar convers√µes de nomenclaturas, ent√£o para n√£o ser redundante acessem o link acima e leiam o primeiro artigo que escrevi.&lt;/p&gt;

&lt;h1 id=&quot;o-que-mudou-oops-ali√°s-o-que-quebrou&quot;&gt;O que mudou, Oops, ali√°s o que quebrou?&lt;/h1&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
Se observarmos &lt;a href=&quot;https://semver.org/&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;semver&lt;/a&gt; e olhar para o significado de &lt;b&gt;MAJOR&lt;/b&gt;, podemos dizer
quer foi bem aplicado aqui, mas n√£o pode existir uma quebra sem um concerto, n√©h verdade!
&lt;br /&gt;
&lt;br /&gt;
Os m√©todos de extens√£o espec√≠ficos do provedor sofreram altera√ß√µes, nas vers√µes anteriores ao &lt;b&gt;EF 3.0&lt;/b&gt;, acessavamos diretamente as propriedades, agora os acessos para algumas dessas propriedades s√£o por m√©todos,
para alguns pode at√© parecer que ficou mais complicado, mas eu defendo esse tipo de abordagem, em n√£o expor suas propriedades onde as mesmas devem ser acessadas apenas por m√©todos ou por um construtor, que n√£o √© o caso aqui.
&lt;br /&gt;
&lt;br /&gt;
Ent√£o fiz um &lt;b&gt;DE-PARA&lt;/b&gt; aqui do artigo anterior e o que mudou.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;at√©-o-ef-22-old&quot;&gt;At√© o EF 2.2 (old)&lt;/h1&gt;
&lt;p&gt;Tinhamos o seguinte comportamento para acessar e alterar os metadados.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEntityTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TableName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ColumnName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ColumnName&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetForeignKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Relational&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrWhiteSpace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;@&quot;([a-z0-9])([A-Z])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;&quot;$1_$2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;usando-o-ef-3x-new&quot;&gt;Usando o EF 3.X (new)&lt;/h1&gt;
&lt;p&gt;Agora o comportamento para acessar os metadados foram alterados.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEntityTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetTableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columnName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetColumnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetColumnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetForeignKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreignKeyName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetConstraintName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetConstraintName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreignKeyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrWhiteSpace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;@&quot;([a-z0-9])([A-Z])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;$1_$2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Observe que n√£o acessamos mais as propriedades diretamente, pois para alterar os metadados usamos: SetTableName, SetConstraintName, SetName.  üòÑ 
 &lt;/strong&gt;
&lt;/div&gt;

&lt;h2 id=&quot;veja-como-ficou-nosso-samplecontext&quot;&gt;Veja como ficou nosso SampleContext&lt;/h2&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sealed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SampleContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbContext&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnConfiguring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbContextOptionsBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsConfigured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseNpgsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;Host=127.0.0.1;Username=postgres;Password=XXX;Database=TestSnake&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EnableRetryOnFailure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnModelCreating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Aqui est√° nossa m√°gica!&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//..&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nossa-sa√≠da-sql&quot;&gt;Nossa sa√≠da SQL&lt;/h2&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_snake_case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;codigo_ibge&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nome_completo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ano_nascimento&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data_cadastro&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pk_test_snake_case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;veja-as-altera√ß√µes-na-api-de-metadados&quot;&gt;Veja as altera√ß√µes na API de metadados&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Antes&lt;/th&gt;
      &lt;th&gt;Depois&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;IEntityType.QueryFilter&lt;/td&gt;
      &lt;td&gt;GetQueryFilter()&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;IEntityType.DefiningQuery&lt;/td&gt;
      &lt;td&gt;GetDefiningQuery()&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;IProperty.IsShadowProperty&lt;/td&gt;
      &lt;td&gt;IsShadowProperty()&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;IProperty.BeforeSaveBehavior&lt;/td&gt;
      &lt;td&gt;GetBeforeSaveBehavior()&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;IProperty.AfterSaveBehavior&lt;/td&gt;
      &lt;td&gt;GetAfterSaveBehavior()&lt;/td&gt;
    &lt;/tr&gt;
     &lt;tr&gt;
      &lt;td&gt;IEntityType.Relational().TableName&lt;/td&gt;
      &lt;td&gt;IEntityType.GetTableName()&lt;/td&gt;
    &lt;/tr&gt;

    &lt;tr&gt;
      &lt;td&gt;IProperty.Relational().ColumnName&lt;/td&gt;
      &lt;td&gt;IProperty.GetColumnName()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IKey.Relational().Name&lt;/td&gt;
      &lt;td&gt;IKey.GetName() &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IForeignKey.Relational().Name&lt;/td&gt;
      &lt;td&gt;IForeignKey.GetConstraintName()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IIndex.Relational().Name&lt;/td&gt;
      &lt;td&gt;IIndex.GetName()&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;performance&quot;&gt;Performance&lt;/h2&gt;
&lt;p&gt;1 - Em vez de usar Task&lt;T&gt; agora se usa &lt;a href=&quot;https://docs.microsoft.com/pt-br/dotnet/api/system.threading.tasks.valuetask-1?view=netstandard-2.1&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;ValueTask&lt;/a&gt; o que reduz o n√∫mero de aloca√ß√µes de mem√≥ria na pilha.
&lt;br /&gt;
2 - Voc√™ poderia at√© n√£o saber disso, mas quando acessavamos o m√©todo Entry() era disparado um DetectChanges() para todos objetos daquele contexto espec√≠fico, agora isso n√£o √© mais uma verdade :) ualll!&lt;/T&gt;&lt;/p&gt;

&lt;h2 id=&quot;c√≥digo-completo&quot;&gt;C√≥digo Completo!&lt;/h2&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.EntityFrameworkCore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text.RegularExpressions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SnakeCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SampleContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GenerateCreateScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sealed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SampleContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbContext&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnConfiguring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbContextOptionsBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsConfigured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;optionsBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UseNpgsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;Host=127.0.0.1;Username=postgres;Password=XXX;Database=TestSnake&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EnableRetryOnFailure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnModelCreating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;modelo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Aqui est√° nossa m√°gica!&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;modelo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SnakeCase&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEntityTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetTableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columnName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetColumnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetColumnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columnName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetForeignKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreignKeyName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetConstraintName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetConstraintName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreignKeyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetIndexes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ToSnakeCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrWhiteSpace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;@&quot;([a-z0-9])([A-Z])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;$1_$2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;RegexOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compiled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToLower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestSnakeCase&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CodigoIBGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NomeCompleto&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnoNascimento&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataCadastro&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
Os fontes do exemplo usado est√° aqui:&lt;br /&gt;
&lt;a href=&quot;https://github.com/ralmsdeveloper/samplesnakecase&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;
https://github.com/ralmsdeveloper/samplesnakecase
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Pessoal fico por aqui e um forte abra√ßo! üòÑ 
 &lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #postgresql #efcore31 #netcore31&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoal, tudo bem?! üíö Veja como fazer conven√ß√µes de nomenclatura SnakeCase de forma f√°cil para o Entity Framework Core 3.1 FYI: Este artigo √© uma vers√£o atualizada de: http://ralms.net/dica/snakecase/ O objetivo maior deste artigo √© mostrar as altera√ß√µes na API de metadados do Entity Framework Core 3.x. Veja esse artigo! Quer ver um resumid√£o sobre Naming Conventions? acesse esse link: http://ralms.net/dica/snakecase/ O que me levou a escrever esse artigo? N√£o quero me prolongar aqui, dado que j√° escrevi um artigo falando sobre minha real necessidade de utilizar convers√µes de nomenclaturas, ent√£o para n√£o ser redundante acessem o link acima e leiam o primeiro artigo que escrevi. O que mudou, Oops, ali√°s o que quebrou? Se observarmos semver e olhar para o significado de MAJOR, podemos dizer quer foi bem aplicado aqui, mas n√£o pode existir uma quebra sem um concerto, n√©h verdade! Os m√©todos de extens√£o espec√≠ficos do provedor sofreram altera√ß√µes, nas vers√µes anteriores ao EF 3.0, acessavamos diretamente as propriedades, agora os acessos para algumas dessas propriedades s√£o por m√©todos, para alguns pode at√© parecer que ficou mais complicado, mas eu defendo esse tipo de abordagem, em n√£o expor suas propriedades onde as mesmas devem ser acessadas apenas por m√©todos ou por um construtor, que n√£o √© o caso aqui. Ent√£o fiz um DE-PARA aqui do artigo anterior e o que mudou. At√© o EF 2.2 (old) Tinhamos o seguinte comportamento para acessar e alterar os metadados. public static void ToSnakeNames(this ModelBuilder modelBuilder) { foreach (var entity in modelBuilder.Model.GetEntityTypes()) { entity.Relational().TableName = entity.Relational().TableName.ToSnakeCase(); foreach (var property in entity.GetProperties()) { property.Relational().ColumnName = property .Relational() .ColumnName .ToSnakeCase(); } foreach (var key in entity.GetKeys()) { key.Relational().Name = key.Relational().Name.ToSnakeCase(); } foreach (var key in entity.GetForeignKeys()) { key.Relational().Name = key.Relational().Name.ToSnakeCase(); } foreach (var index in entity.GetIndexes()) { index.Relational().Name = index.Relational().Name.ToSnakeCase(); } } } private static string ToSnakeCase(this string name) { return string.IsNullOrWhiteSpace(name) ? name : Regex.Replace( name, @&quot;([a-z0-9])([A-Z])&quot;, &quot;$1_$2&quot;, RegexOptions.Compiled, TimeSpan.FromSeconds(0.2)).ToLower(); } Usando o EF 3.X (new) Agora o comportamento para acessar os metadados foram alterados. public static void ToSnakeNames(this ModelBuilder modelBuilder) { foreach (var entity in modelBuilder.Model.GetEntityTypes()) { var tableName = entity.GetTableName().ToSnakeCase(); entity.SetTableName(tableName); foreach (var property in entity.GetProperties()) { var columnName = property.GetColumnName().ToSnakeCase(); property.SetColumnName(columnName); } foreach (var key in entity.GetKeys()) { var keyName = key.GetName().ToSnakeCase(); key.SetName(keyName); } foreach (var key in entity.GetForeignKeys()) { var foreignKeyName = key.GetConstraintName().ToSnakeCase(); key.SetConstraintName(foreignKeyName); } foreach (var index in entity.GetIndexes()) { var indexName = index.GetName().ToSnakeCase(); index.SetName(indexName); } } } private static string ToSnakeCase(this string name) { return string.IsNullOrWhiteSpace(name) ? name : Regex.Replace( name, @&quot;([a-z0-9])([A-Z])&quot;, &quot;$1_$2&quot;, RegexOptions.Compiled, TimeSpan.FromSeconds(0.2)).ToLower(); } Observe que n√£o acessamos mais as propriedades diretamente, pois para alterar os metadados usamos: SetTableName, SetConstraintName, SetName. üòÑ Veja como ficou nosso SampleContext public sealed class SampleContext : DbContext { protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.UseNpgsql( &quot;Host=127.0.0.1;Username=postgres;Password=XXX;Database=TestSnake&quot;, _ =&amp;gt; _.EnableRetryOnFailure()); } } protected override void OnModelCreating(ModelBuilder modelo) { modelo.Entity&amp;lt;TestSnakeCase&amp;gt;(); // Aqui est√° nossa m√°gica! modelo.ToSnakeNames(); //.. } } Nossa sa√≠da SQL CREATE TABLE test_snake_case ( id serial NOT NULL, codigo_ibge integer NOT NULL, nome_completo text NULL, ano_nascimento integer NOT NULL, data_cadastro timestamp without time zone NOT NULL, CONSTRAINT pk_test_snake_case PRIMARY KEY (id) ); Veja as altera√ß√µes na API de metadados Antes Depois IEntityType.QueryFilter GetQueryFilter() IEntityType.DefiningQuery GetDefiningQuery() IProperty.IsShadowProperty IsShadowProperty() IProperty.BeforeSaveBehavior GetBeforeSaveBehavior() IProperty.AfterSaveBehavior GetAfterSaveBehavior() IEntityType.Relational().TableName IEntityType.GetTableName() IProperty.Relational().ColumnName IProperty.GetColumnName() IKey.Relational().Name IKey.GetName() IForeignKey.Relational().Name IForeignKey.GetConstraintName() IIndex.Relational().Name IIndex.GetName() Performance 1 - Em vez de usar Task agora se usa ValueTask o que reduz o n√∫mero de aloca√ß√µes de mem√≥ria na pilha. 2 - Voc√™ poderia at√© n√£o saber disso, mas quando acessavamos o m√©todo Entry() era disparado um DetectChanges() para todos objetos daquele contexto espec√≠fico, agora isso n√£o √© mais uma verdade :) ualll! C√≥digo Completo! using Microsoft.EntityFrameworkCore; using System; using System.Text.RegularExpressions; namespace SnakeCase { class Program { static void Main(string[] args) { using var db = new SampleContext(); var script = db.Database.GenerateCreateScript(); Console.WriteLine(script); } } public sealed class SampleContext : DbContext { protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.UseNpgsql( &quot;Host=127.0.0.1;Username=postgres;Password=XXX;Database=TestSnake&quot;, _ =&amp;gt; _.EnableRetryOnFailure()); } } protected override void OnModelCreating(ModelBuilder modelo) { modelo.Entity&amp;lt;TestSnakeCase&amp;gt;(); // Aqui est√° nossa m√°gica! modelo.ToSnakeNames(); } } public static class SnakeCase { public static void ToSnakeNames(this ModelBuilder modelBuilder) { foreach (var entity in modelBuilder.Model.GetEntityTypes()) { var tableName = entity.GetTableName().ToSnakeCase(); entity.SetTableName(tableName); foreach (var property in entity.GetProperties()) { var columnName = property.GetColumnName().ToSnakeCase(); property.SetColumnName(columnName); } foreach (var key in entity.GetKeys()) { var keyName = key.GetName().ToSnakeCase(); key.SetName(keyName); } foreach (var key in entity.GetForeignKeys()) { var foreignKeyName = key.GetConstraintName().ToSnakeCase(); key.SetConstraintName(foreignKeyName); } foreach (var index in entity.GetIndexes()) { var indexName = index.GetName().ToSnakeCase(); index.SetName(indexName); } } } private static string ToSnakeCase(this string name) { return string.IsNullOrWhiteSpace(name) ? name : Regex.Replace( name, @&quot;([a-z0-9])([A-Z])&quot;, &quot;$1_$2&quot;, RegexOptions.Compiled, TimeSpan.FromSeconds(0.2)).ToLower(); } } public class TestSnakeCase { public int Id { get; set; } public int CodigoIBGE { get; set; } public string NomeCompleto { get; set; } public int AnoNascimento { get; set; } public DateTime DataCadastro { get; set; } } } Os fontes do exemplo usado est√° aqui: https://github.com/ralmsdeveloper/samplesnakecase Pessoal fico por aqui e um forte abra√ßo! üòÑ #mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #postgresql #efcore31 #netcore31</summary></entry><entry><title type="html">Developers Sergipe Summit 2019</title><link href="http://localhost:4000/evento/developerssergipe2019/" rel="alternate" type="text/html" title="Developers Sergipe Summit 2019" /><published>2019-11-15T00:00:00+00:00</published><updated>2019-11-15T00:00:00+00:00</updated><id>http://localhost:4000/evento/developerssergipe2019</id><content type="html" xml:base="http://localhost:4000/evento/developerssergipe2019/">&lt;center&gt;&lt;strong&gt;Fala pessoal, tudo bem?! üëç &lt;/strong&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento (12).jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify;&quot;&gt;
&lt;center&gt;Developers Sergipe Summit 2019&lt;/center&gt;
&lt;br /&gt;&lt;br /&gt; 
No dia &lt;strong&gt;15/11/2018&lt;/strong&gt; realizamos a segunda edi√ß√£o do Developers Sergipe Summit, em nosso querido estado de &lt;strong&gt;Sergipe&lt;/strong&gt;, aqui no nordeste, sala lotada e pessoal com um intera√ß√£o surreal, Uall, isso foi fant√°stico.
&lt;br /&gt;&lt;br /&gt;
 Quero agradecer a todos meus amigos palestrantes e todos que participaram da organiza√ß√£o que aceitaram meu convite, e tornou esse evento t√£o lindo, n√£o foi f√°cil, mas impactamos de forma positiva nossa comunidade aqui no &lt;strong&gt;Nordeste&lt;/strong&gt;, quero em 2020 realizar um evento superando todas as expectativas, mantendo a qualidade e excel√™ncia para nosso p√∫blico.
&lt;br /&gt;&lt;br /&gt;
 Que galera fant√°stica, era um feriado, e simplesmente lotou, aqui fica nosso carinho a todos que se fizeram presentes neste dia!!!
&lt;br /&gt;&lt;br /&gt;
Enfim foi uma experi√™ncia muito boa, a galera com uma energia sem igual, parab√©ns pessoal para voc√™s, e iremos tentar sempre elevar a r√©gua da qualidade, iremos procurar lideres de comunidades que assim queira juntar-se a n√≥s, muitos planos para &lt;strong&gt;2020&lt;/strong&gt;.
&lt;br /&gt;&lt;br /&gt; 
Novamente aqui vai uma palavra para meus amigos palestrantes, participantes e toda organiza√ß√£o: &lt;strong&gt;GRATID√ÉO&lt;/strong&gt; e meu muito obrigado!
&lt;br /&gt;&lt;br /&gt; 

&lt;div class=&quot;notice--success&quot;&gt;
&quot;Se quer ir r√°pido, v√° sozinho. Se quer ir longe, v√° em grupo.&quot; &lt;br /&gt;
Prov√©rbio Africano üòÑ
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt; 
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/devse2019/apoio.JPG&quot; alt=&quot;02&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ppt-das-palestras&quot;&gt;PPT das palestras&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/khaosdoctor/escalabilidade-de-servicos-com-kubernetes&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;Lucas Santos - kubernetes&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.slideshare.net/igoravl/devops-em-grandes-empresas-mito-ou-realidade&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;Igor Abade - DevOps&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/carloscds/dotnetconfsample&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;Carlos dos Santos - NETStandard&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://bit.ly/js-recognise-people-erickwendel&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;Erick Wendel - JS&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/davcouto/developersSergipeSummit2019/blob/master/DevelopersSergipeSummit2019_SQLServer2019.pdf&quot; target=&quot;_BLANK&quot; alt=&quot;&quot;&gt;David Couto - SQL Server 2019&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;galeria-de-fotos&quot;&gt;Galeria de Fotos&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/devse2019/1.jpg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;third &quot;&gt;
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/1.jpg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/1.jpg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(1).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(1).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(2).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(2).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(3).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(3).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(4).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(4).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(5).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(5).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(6).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(6).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(7).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(7).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(8).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(8).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(9).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(9).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(10).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(10).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(11).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(11).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(12).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(12).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(13).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(13).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(14).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(14).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(15).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(15).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(16).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(16).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(17).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(17).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(18).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(18).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(19).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(19).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(20).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(20).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(21).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(21).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(22).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(22).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(23).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(23).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(24).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(24).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(25).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(25).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(26).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(26).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(227).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(27).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(28).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(28).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(29).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(29).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(30).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(30).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(31).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(31).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(32).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(32).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(33).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(33).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(34).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(34).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(35).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(35).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(36).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(36).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(37).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(37).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(38).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(38).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(39).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(39).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(40).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(40).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(41).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(41).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(42).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(42).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(43).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(43).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(44).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(44).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(45).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(45).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(46).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(46).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(47).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(47).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(48).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(48).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(49).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(49).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(50).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(50).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(51).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(51).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(52).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(52).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(53).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(53).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(54).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(54).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(55).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(55).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(56).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(56).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(57).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(57).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(58).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(58).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(59).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(59).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(60).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(60).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(61).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(61).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(62).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(62).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(63).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(63).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(64).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(65).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(66).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(66).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(67).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(67).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(68).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(68).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(69).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(69).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(70).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(70).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(71).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(71).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(72).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(72).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(73).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(73).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(74).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(74).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(75).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(75).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(76).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(76).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(77).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(77).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(78).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(78).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(79).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(79).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(80).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(80).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(81).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(81).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(82).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(82).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(83).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(83).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(84).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(84).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(85).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(85).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(86).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(86).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(87).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(87).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(88).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(88).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(89).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(89).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(90).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(90).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/devse2019/evento%20(91).jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/devse2019/evento%20(91).jpeg&quot; alt=&quot;Developers Sergipe Summit 2019&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Fotos do Evento
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;div class=&quot;notice--success&quot;&gt;
Pessoal fico por aqui e um forte abra√ßo! üòÑ
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share &lt;a href=&quot;https://www.instagram.com/developerssergipe/&quot; alt=&quot;&quot;&gt;@developerssergipe&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoal, tudo bem?! üëç Developers Sergipe Summit 2019 No dia 15/11/2018 realizamos a segunda edi√ß√£o do Developers Sergipe Summit, em nosso querido estado de Sergipe, aqui no nordeste, sala lotada e pessoal com um intera√ß√£o surreal, Uall, isso foi fant√°stico. Quero agradecer a todos meus amigos palestrantes e todos que participaram da organiza√ß√£o que aceitaram meu convite, e tornou esse evento t√£o lindo, n√£o foi f√°cil, mas impactamos de forma positiva nossa comunidade aqui no Nordeste, quero em 2020 realizar um evento superando todas as expectativas, mantendo a qualidade e excel√™ncia para nosso p√∫blico. Que galera fant√°stica, era um feriado, e simplesmente lotou, aqui fica nosso carinho a todos que se fizeram presentes neste dia!!! Enfim foi uma experi√™ncia muito boa, a galera com uma energia sem igual, parab√©ns pessoal para voc√™s, e iremos tentar sempre elevar a r√©gua da qualidade, iremos procurar lideres de comunidades que assim queira juntar-se a n√≥s, muitos planos para 2020. Novamente aqui vai uma palavra para meus amigos palestrantes, participantes e toda organiza√ß√£o: GRATID√ÉO e meu muito obrigado! &quot;Se quer ir r√°pido, v√° sozinho. Se quer ir longe, v√° em grupo.&quot; Prov√©rbio Africano üòÑ PPT das palestras Lucas Santos - kubernetes Igor Abade - DevOps Carlos dos Santos - NETStandard Erick Wendel - JS David Couto - SQL Server 2019 Galeria de Fotos Fotos do Evento Pessoal fico por aqui e um forte abra√ßo! üòÑ #mvpbuzz #mvpbr #mvp #developerssergipe #share @developerssergipe</summary></entry><entry><title type="html">IEnumerable, List e Array</title><link href="http://localhost:4000/dica/compreendendo-ienumerable-list-array/" rel="alternate" type="text/html" title="IEnumerable, List e Array" /><published>2019-10-24T00:00:00+00:00</published><updated>2019-10-24T00:00:00+00:00</updated><id>http://localhost:4000/dica/compreendendo-ienumerable-list-array</id><content type="html" xml:base="http://localhost:4000/dica/compreendendo-ienumerable-list-array/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/IEnumarableList.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoal, tudo bem?!&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;p&gt;Curiosidade leva nos sempre a pensar fora da caixa!!!&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;notice--success&quot;&gt;
&lt;strong&gt;
 Fico por aqui e um forte abra√ßo! üòÑ 
 Me siga no twitter: 
&lt;/strong&gt;
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #performance #efcore31 #netcore31 #span&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoal, tudo bem?! Curiosidade leva nos sempre a pensar fora da caixa!!! Fico por aqui e um forte abra√ßo! üòÑ Me siga no twitter: #mvpbuzz #mvpbr #mvp #developerssergipe #share #vscode #performance #efcore31 #netcore31 #span</summary></entry><entry><title type="html">10 dicas de performance no EF Core</title><link href="http://localhost:4000/eventos/vssummit2019/" rel="alternate" type="text/html" title="10 dicas de performance no EF Core" /><published>2019-06-23T00:00:00+00:00</published><updated>2019-06-23T00:00:00+00:00</updated><id>http://localhost:4000/eventos/vssummit2019</id><content type="html" xml:base="http://localhost:4000/eventos/vssummit2019/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/1.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoALL, tudo bem?! üòú&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;vssummit-2019&quot;&gt;VSSUMMIT 2019&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify&quot;&gt;
Nos dias 21/22 de junho de 2019, participei pela segunda vez do &lt;a href=&quot;http://vssummit.com.br&quot; alt=&quot;&quot;&gt;VSSUMMIT&lt;/a&gt;.
&lt;br /&gt;&lt;br /&gt;
Foram 2 dias fant√°sticos, centenas de pessoas marcaram presen√ßa no evento, entreguei 2 palestras, adorei o p√∫blico, animado e com sede de absorver informa√ß√µes.
&lt;br /&gt;&lt;br /&gt;
Vou deixar aqui o slide de minha apresenta√ß√£o, e estarei escrevendo um arquivo com tudo que foi apresentado, e colocarei no Github os exemplos da apresenta√ß√£o, e alguns que nem consegui... fiz in√∫meros exemplos que n√£o foi poss√≠vel apresentar devido ao tempo, mas estarei √† disposi√ß√£o de todos.
&lt;/div&gt;

&lt;h2 id=&quot;slide-da-apresenta√ß√£o&quot;&gt;Slide da apresenta√ß√£o&lt;/h2&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/374vaj4E3JTmI0&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://pt.slideshare.net/RafaelAlmeida59/10-dicas-de-performance-no-efcore&quot; title=&quot;MVPCONF Latam 2019&quot; target=&quot;_blank&quot;&gt;VSSUMMIT 2019&lt;/a&gt; &lt;/strong&gt; de &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/RafaelAlmeida59&quot; target=&quot;_blank&quot;&gt;Rafael Almeida&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;galeria-de-fotos&quot;&gt;Galeria de Fotos&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/1.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;third &quot;&gt;
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/1.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/1.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/2.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/2.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/3.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/3.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/4.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/4.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/5.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/5.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/6.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/6.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/vssummit2019/7.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/vssummit2019/7.jpeg&quot; alt=&quot;VSSUMMIT 2019&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Fotos do Evento
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;div class=&quot;notice--success&quot;&gt;
Pessoal fico por aqui e um forte abra√ßo! üòÑ
&lt;/div&gt;

&lt;p&gt;#vssummit2019 #mvpbuzz #mvpbr #mvp #developerssergipe #share #efcore&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoALL, tudo bem?! üòú VSSUMMIT 2019 Nos dias 21/22 de junho de 2019, participei pela segunda vez do VSSUMMIT. Foram 2 dias fant√°sticos, centenas de pessoas marcaram presen√ßa no evento, entreguei 2 palestras, adorei o p√∫blico, animado e com sede de absorver informa√ß√µes. Vou deixar aqui o slide de minha apresenta√ß√£o, e estarei escrevendo um arquivo com tudo que foi apresentado, e colocarei no Github os exemplos da apresenta√ß√£o, e alguns que nem consegui... fiz in√∫meros exemplos que n√£o foi poss√≠vel apresentar devido ao tempo, mas estarei √† disposi√ß√£o de todos. Slide da apresenta√ß√£o VSSUMMIT 2019 de Rafael Almeida Galeria de Fotos Fotos do Evento Pessoal fico por aqui e um forte abra√ßo! üòÑ #vssummit2019 #mvpbuzz #mvpbr #mvp #developerssergipe #share #efcore</summary></entry><entry><title type="html">Deep-Dive On EntityFrameworkCore</title><link href="http://localhost:4000/eventos/mvpconf2019/" rel="alternate" type="text/html" title="Deep-Dive On EntityFrameworkCore" /><published>2019-04-14T00:00:00+00:00</published><updated>2019-04-14T00:00:00+00:00</updated><id>http://localhost:4000/eventos/mvpconf2019</id><content type="html" xml:base="http://localhost:4000/eventos/mvpconf2019/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/topo.PNG&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoALL, tudo bem?! üëä&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;mvpconf-latam-2019&quot;&gt;MVPCONF Latam 2019&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: justify&quot;&gt;
Nos dias 12/13 de abril de 2019, ocorreu a segunda edi√ß√£o do MVPCONF, s√≥ que de uma forma especial, dessa vez foi MVPCONF LATAM, tivemos presen√ßa de palestrantes internacionais, inclusive da R√∫ssia, aqui vai meu agradecimento especial ao &lt;strong&gt;Michael Philippenko&lt;/strong&gt; e &lt;strong&gt;Vitaliy Ezepchuck&lt;/strong&gt; que tive a oportunidade de conhece-los e a todos que patrocinaram e fizeram esse evento ser poss√≠vel, agradecer a todos palestrantes por compartilhar conhecimento e a voc√™ que participou do evento, nada disso seria poss√≠vel sem voc√™, um beijo e um forte abra√ßo em todos que estavam ajudando, desde a cria√ß√£o do site, app, log√≠stica e demais coisas... nossa voc√™s foram demais, sei o quanto foi dif√≠cil.
&lt;br /&gt;&lt;br /&gt;
Foram 2 dias fant√°sticos, mais de 2000 pessoas marcaram presen√ßa no evento, entreguei 3 palestras, adorei o p√∫blico, animado e com sede de absorver informa√ß√µes.
&lt;br /&gt;&lt;br /&gt;
Vou deixar aqui o slide de minha apresenta√ß√£o e Github com os exemplos da apresenta√ß√£o, e alguns que nem consegui... fiz in√∫meros exemplos que n√£o foi poss√≠vel apresentar devido ao tempo, mas estarei √† disposi√ß√£o de todos.
&lt;/div&gt;

&lt;h2 id=&quot;slide-da-apresenta√ß√£o&quot;&gt;Slide da apresenta√ß√£o&lt;/h2&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/rrkAZ3wxffR0pb&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/RafaelAlmeida59/mvpconf-latam-2019&quot; title=&quot;MVPCONF Latam 2019&quot; target=&quot;_blank&quot;&gt;MVPCONF Latam 2019&lt;/a&gt; &lt;/strong&gt; de &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/RafaelAlmeida59&quot; target=&quot;_blank&quot;&gt;Rafael Almeida&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;github-com-exemplos&quot;&gt;Github com exemplos&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ralmsdeveloper/ExemplosEFCore&quot;&gt;https://github.com/ralmsdeveloper/ExemplosEFCore&lt;/a&gt; 
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;galeria-de-fotos&quot;&gt;Galeria de Fotos&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/1.jpeg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;third &quot;&gt;
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/1.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/1.jpeg&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/2.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/2.jpeg&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/3.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/3.jpeg&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/4.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/4.jpeg&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/5.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/5.jpeg&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/6.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/6.jpeg&quot; alt=&quot;&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/7.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/7.jpeg&quot; alt=&quot;&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/8.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/8.jpeg&quot; alt=&quot;&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/9.jpeg&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/9.jpeg&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/10.JPG&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/10.JPG&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/11.JPG&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/11.JPG&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/12.JPG&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/12.JPG&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/13.JPG&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/13.JPG&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/14.JPG&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/14.JPG&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;http://localhost:4000/assets/images/mvpconf2019/15.JPG&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/images/mvpconf2019/15.JPG&quot; alt=&quot;MVPCONF 2019&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Fotos do Evento
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;div class=&quot;notice--success&quot;&gt;
Pessoal fico por aqui e um forte abra√ßo! üòÑ
&lt;/div&gt;

&lt;p&gt;#mvpbuzz #mvpbr #mvp #developerssergipe #share #efcore&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoALL, tudo bem?! üëä MVPCONF Latam 2019 Nos dias 12/13 de abril de 2019, ocorreu a segunda edi√ß√£o do MVPCONF, s√≥ que de uma forma especial, dessa vez foi MVPCONF LATAM, tivemos presen√ßa de palestrantes internacionais, inclusive da R√∫ssia, aqui vai meu agradecimento especial ao Michael Philippenko e Vitaliy Ezepchuck que tive a oportunidade de conhece-los e a todos que patrocinaram e fizeram esse evento ser poss√≠vel, agradecer a todos palestrantes por compartilhar conhecimento e a voc√™ que participou do evento, nada disso seria poss√≠vel sem voc√™, um beijo e um forte abra√ßo em todos que estavam ajudando, desde a cria√ß√£o do site, app, log√≠stica e demais coisas... nossa voc√™s foram demais, sei o quanto foi dif√≠cil. Foram 2 dias fant√°sticos, mais de 2000 pessoas marcaram presen√ßa no evento, entreguei 3 palestras, adorei o p√∫blico, animado e com sede de absorver informa√ß√µes. Vou deixar aqui o slide de minha apresenta√ß√£o e Github com os exemplos da apresenta√ß√£o, e alguns que nem consegui... fiz in√∫meros exemplos que n√£o foi poss√≠vel apresentar devido ao tempo, mas estarei √† disposi√ß√£o de todos. Slide da apresenta√ß√£o MVPCONF Latam 2019 de Rafael Almeida Github com exemplos https://github.com/ralmsdeveloper/ExemplosEFCore Galeria de Fotos Fotos do Evento Pessoal fico por aqui e um forte abra√ßo! üòÑ #mvpbuzz #mvpbr #mvp #developerssergipe #share #efcore</summary></entry><entry><title type="html">Dica ApplyConfiguration EFCore &amp;gt;=2.2</title><link href="http://localhost:4000/dica/dicaapplyconfiguration/" rel="alternate" type="text/html" title="Dica ApplyConfiguration EFCore &gt;=2.2" /><published>2019-03-05T00:00:00+00:00</published><updated>2019-03-05T00:00:00+00:00</updated><id>http://localhost:4000/dica/dicaapplyconfiguration</id><content type="html" xml:base="http://localhost:4000/dica/dicaapplyconfiguration/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/dicas/dicaapplyconfiguration.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;strong&gt;Fala pessoALL, tudo bem?! üëä&lt;/strong&gt;&lt;/center&gt;
&lt;hr /&gt;

&lt;p&gt;Bom essa dica pode lhe ajudar a eliminar uma boa parte de c√≥digo de sua aplica√ß√£o, em especial de seu &lt;strong&gt;Context&lt;/strong&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;notice--warning&quot;&gt;
&lt;strong&gt;FYI:&lt;/strong&gt;&lt;br /&gt;
Esta nova funcionalidade que irei apresentar foi uma das features implementadas e que saiu na vers√£o do EntityFramework Core 2.2.
&lt;/div&gt;
&lt;p&gt;Sem mais delongas vamos ao que interessa, antes do EntityFramework Core 2.2 sair do forno, uma das op√ß√µes de aplicar as configura√ß√µes de nossas entidades era da seguinte forma:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SampleDbContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbContext&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbContextOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnModelCreating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoginConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClienteConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EnderecoConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CidadeConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ProdutoConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EstoqueConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;whats&quot;&gt;What‚Äôs&lt;/h2&gt;

&lt;p&gt;Pois √©, isso √© muito doloroso, imagine um sistema complexo, onde existe in√∫meras entidades, toda vez que criar uma ter que aplicar manualmente no &lt;strong&gt;onModelCreating&lt;/strong&gt;,.., √© bastante chato, e podemos esquecer rss üòè!!!&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Pois bem, existe uma forma de burlar isso, ent√£o ter√≠amos que escrever um pouco de c√≥digo, mas isso seria uma √∫nica vez.&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SampleDbContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbContext&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbContextOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnModelCreating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;ApplyAllConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ApplyAllConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mappingTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsAbstract&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetInterfaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetTypeInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsGenericType&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetGenericTypeDefinition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IEntityTypeConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&amp;gt;)));&lt;/span&gt;


        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entityMethod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetMethods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Single&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Entity&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsGenericMethod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReturnType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;EntityTypeBuilder`1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mappingType&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mappingTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genericTypeArg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mappingType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetInterfaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Single&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GenericTypeArguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Single&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genericEntityMethod&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entityMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;MakeGenericMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;genericTypeArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entityBuilder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;genericEntityMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CreateInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mappingType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Configure&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entityBuilder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;ent√£o-isso-foi-resolvido&quot;&gt;Ent√£o isso foi resolvido&lt;/h2&gt;
&lt;p&gt;Como falei anteriormente, na vers√£o EFCore 2.2 saiu uma nova feature que resolve tudo isso, ficou mais clean, 
pouco c√≥digo e tudo resolvido, veja que agora tudo faz mais sentido, gra√ßas ao &lt;strong&gt;ApplyConfigurationsFromAssembly&lt;/strong&gt;.&lt;br /&gt;
Exemplo:&lt;/p&gt;
&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SampleDbContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DbContext&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DbContextOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnModelCreating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModelBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SampleDbContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;modelBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyConfigurationsFromAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;notice--warning&quot;&gt;
&lt;strong&gt;FYI:&lt;/strong&gt;&lt;br /&gt;
O m√©todo &lt;strong&gt;ApplyConfigurationsFromAssembly&lt;/strong&gt; aceita 2 par√¢metros, o primeiro √© um &lt;strong&gt;Assembly&lt;/strong&gt;, a partir dele o m√©todo far√° a varredura das interfaces de configura√ß√£o via &lt;strong&gt;Reflection&lt;/strong&gt;, o segundo √© um predicado onde voc√™ pode dizer quais configura√ß√µes ser√£o aplicadas.
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt; 
Pessoal, fico por aqui &lt;strong&gt;#mvp #mvpbr #mvpbuzz #efcore&lt;/strong&gt;&lt;/p&gt;</content><author><name>Rafael Almeida</name><email>ralms@ralms.net</email></author><summary type="html">Fala pessoALL, tudo bem?! üëä Bom essa dica pode lhe ajudar a eliminar uma boa parte de c√≥digo de sua aplica√ß√£o, em especial de seu Context FYI: Esta nova funcionalidade que irei apresentar foi uma das features implementadas e que saiu na vers√£o do EntityFramework Core 2.2. Sem mais delongas vamos ao que interessa, antes do EntityFramework Core 2.2 sair do forno, uma das op√ß√µes de aplicar as configura√ß√µes de nossas entidades era da seguinte forma: public class SampleDbContext : DbContext { public SampleDbContext(DbContextOptions&amp;lt;SampleDbContext&amp;gt; options) : base(options) { } protected override void OnModelCreating(ModelBuilder modelBuilder) { modelBuilder.ApplyConfiguration(new LoginConfiguration()); modelBuilder.ApplyConfiguration(new ClienteConfiguration()); modelBuilder.ApplyConfiguration(new EnderecoConfiguration()); modelBuilder.ApplyConfiguration(new CidadeConfiguration()); modelBuilder.ApplyConfiguration(new ProdutoConfiguration()); modelBuilder.ApplyConfiguration(new EstoqueConfiguration()); modelBuilder.ApplyConfiguration(new ...); } } What‚Äôs Pois √©, isso √© muito doloroso, imagine um sistema complexo, onde existe in√∫meras entidades, toda vez que criar uma ter que aplicar manualmente no onModelCreating,.., √© bastante chato, e podemos esquecer rss üòè!!! Pois bem, existe uma forma de burlar isso, ent√£o ter√≠amos que escrever um pouco de c√≥digo, mas isso seria uma √∫nica vez. public class SampleDbContext : DbContext { public SampleDbContext(DbContextOptions&amp;lt;SampleDbContext&amp;gt; options) : base(options) { } protected override void OnModelCreating(ModelBuilder modelBuilder) { ApplyAllConfiguration( modelBuilder, typeof(SampleDbContext).Assembly); } private void ApplyAllConfiguration(ModelBuilder modelBuilder, Assembly assembly) { var mappingTypes = assembly .GetTypes() .Where(x =&amp;gt; !x.IsAbstract &amp;amp;&amp;amp; x.GetInterfaces() .Any(y =&amp;gt; y.GetTypeInfo().IsGenericType &amp;amp;&amp;amp; y.GetGenericTypeDefinition() == typeof(IEntityTypeConfiguration&amp;lt;&amp;gt;))); var entityMethod = typeof(ModelBuilder).GetMethods() .Single(x =&amp;gt; x.Name == &quot;Entity&quot; &amp;amp;&amp;amp; x.IsGenericMethod &amp;amp;&amp;amp; x.ReturnType.Name == &quot;EntityTypeBuilder`1&quot;); foreach (var mappingType in mappingTypes) { var genericTypeArg = mappingType.GetInterfaces().Single().GenericTypeArguments.Single(); var genericEntityMethod = entityMethod.MakeGenericMethod(genericTypeArg); var entityBuilder = genericEntityMethod.Invoke(modelBuilder, null); var mapper = Activator.CreateInstance(mappingType); mapper.GetType().GetMethod(&quot;Configure&quot;).Invoke(mapper, new[] { entityBuilder }); } } } Ent√£o isso foi resolvido Como falei anteriormente, na vers√£o EFCore 2.2 saiu uma nova feature que resolve tudo isso, ficou mais clean, pouco c√≥digo e tudo resolvido, veja que agora tudo faz mais sentido, gra√ßas ao ApplyConfigurationsFromAssembly. Exemplo: public class SampleDbContext : DbContext { public SampleDbContext(DbContextOptions&amp;lt;SampleDbContext&amp;gt; options) : base(options) { } protected override void OnModelCreating(ModelBuilder modelBuilder) { var assembly = typeof(SampleDbContext).Assembly; modelBuilder.ApplyConfigurationsFromAssembly(assembly); } } FYI: O m√©todo ApplyConfigurationsFromAssembly aceita 2 par√¢metros, o primeiro √© um Assembly, a partir dele o m√©todo far√° a varredura das interfaces de configura√ß√£o via Reflection, o segundo √© um predicado onde voc√™ pode dizer quais configura√ß√µes ser√£o aplicadas. Pessoal, fico por aqui #mvp #mvpbr #mvpbuzz #efcore</summary></entry></feed>